name: Pull request

on: push

jobs:
  nuget_publish:
    name: Build, Pack, and Publish NuGet Package
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    # if: github.event.pull_request.merged == true
    env:
      BUILD_CONFIG: "Release"
      PROJECT_PATH: "DotnetViewComponents/DotnetViewComponents.csproj"
    strategy:
      matrix:
        dotnet-version: ["3.1.x", "6.0.x", "8.0.x"]
        

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: '5.x'
          dotnet-version: "6.0.x"

      - name: Run GitVersion
        id: gitversion
        run: gitversion /output json /showvariable SemVer

      - name: Set version
        id: set_version
        run: echo "version=${{ steps.gitversion.outputs.SemVer }}" >> $GITHUB_ENV

      - name: Restore NuGet packages
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build project
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration ${{ env.BUILD_CONFIG }} --no-restore

      - name: Pack NuGet package
        run: dotnet pack ${{ env.PROJECT_PATH }} --configuration ${{ env.BUILD_CONFIG }} --no-build -o out /p:PackageVersion=${{ env.version  }}

      - name: Add GitHub NuGet source
        run: dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: Publish NuGet package to GitHub Packages
        run: dotnet nuget push out/*.nupkg --api-key ${{ secrets.PULLREQUEST_TOKEN }} --source "github" --skip-duplicate
