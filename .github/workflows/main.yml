name: Publish PKG

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v1.0.0)
  pull_request:  # Trigger on pull requests
    types: [opened, synchronize, reopened]  # Specify the types of pull request events to trigger the workflow

jobs:
  build:
    env:
      BUILD_CONFIG: 'Release'
      PROJECT_PATH: 'DotnetViewComponents/DotnetViewComponents.csproj'
    name: Build, Pack, and Publish NuGet Package
    runs-on: ubuntu-22.04
    permissions:
      packages: write
      contents: write  # Required to create a release
    strategy: 
      matrix:
        dotnet-version: ['3.1.x']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore NuGet packages
        run: |
          dotnet restore ${{ env.PROJECT_PATH }}
          echo "Restored --> ${{ env.PROJECT_PATH }}"

      - name: Build solution
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration ${{ env.BUILD_CONFIG }} --no-restore

      - name: Determine Package Version
        id: version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "PACKAGE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            # Replace slashes with dots or underscores for branch names
            sanitized_branch_name=$(echo "${GITHUB_REF_NAME}" | tr '/' '.')
            echo "PACKAGE_VERSION=0.1.0-${sanitized_branch_name}" >> $GITHUB_ENV
          fi

      - name: Package nuget        
        run: dotnet pack ${{ env.PROJECT_PATH }} --configuration ${{ env.BUILD_CONFIG }} -o package /p:PackageVersion="${PACKAGE_VERSION}"

      - name: List generated packages
        run: ls -la ./package

      - name: Add GitHub NuGet source
        run: dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name githubPackages "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: Push generated package to GitHub registry
        if: startsWith(github.ref, 'refs/tags/v')
        run: dotnet nuget push ./package/*.nupkg --api-key ${{ secrets.NUGET_TOKEN }} --source "githubPackages" --skip-duplicate

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Upload Package to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: ./package/*.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
