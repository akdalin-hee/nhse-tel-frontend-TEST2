name: Publish NuGet Package

on: [push, pull_request]

jobs:
  nuget_publish:
    name: Build, Pack, and Publish NuGet Package
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      BUILD_CONFIG: "Release"
      PROJECT_PATH: "DotnetViewComponents/DotnetViewComponents.csproj"
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'   # Specify your target .NET version

      - name: 'Get latest version tag'
        id: get_version
        run: |
          # Get the latest tag, default to v0.0.0 if no tags exist
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: 'Increment patch version'
        id: increment_version
        run: |
          # Increment the patch version (the last number)
          new_version=$(echo "${{ env.LATEST_TAG }}" | awk -F. -v OFS=. '{$NF++;print}')
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
          echo "::set-output name=version::${new_version#v}"


      - name: Restore NuGet packages
        run: dotnet restore $PROJECT_PATH

      - name: Build project
        run: dotnet build $PROJECT_PATH --configuration $BUILD_CONFIG --no-restore

      - name: Pack NuGet package
        run: dotnet pack $PROJECT_PATH --configuration $BUILD_CONFIG --no-build -o out /p:PackageVersion=${{ steps.increment_version.outputs.version }}

      - name: Add GitHub NuGet source
        run: dotnet nuget add source --username ${{ github.actor }} --password $GITHUB_TOKEN --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: Publish NuGet package to GitHub Packages
        run: dotnet nuget push out/*.nupkg --api-key $GITHUB_TOKEN --source "github" --skip-duplicate
